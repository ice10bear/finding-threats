---
title: "Информационно-аналитические технологии поиска угроз информационной безопасности"
author: "Емельяненко Мария"
format: 
    md:
        output-file: README.md
---

# Лабораторная работа №4

## Цель работы

1.  Зекрепить практические навыки использования языка программирования R для обработки данных
2.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R
3.  Закрепить навыки исследования метаданных DNS трафика

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор R 4.2.2
4.  dplyr 1.1.3
5.  dns.log
6.  header.csv

**Общая ситуация**

Вы исследуете подозрительную сетевую активность во внутренней сети Доброй Организации. Вам в руки попали метаданные о DNS трафике в исследуемой сети. Исследуйте файлы, восстановите данные, подготовьте их к анализу и дайте обоснованные ответы на поставленные вопросы исследования

## Задание

Используя программный пакет `dplyr`, освоить анализ DNS логов с помощью языка программирования R

## Ход работы

### Шаг 1. Подготовка данных

Для начала установим пакет `dplyr`

```{r}
library(dplyr)
```

1.  Импортируйте данные DNS

	```{r}
	data = read.csv("dns.log", header = FALSE, sep = "\t", encoding = "UTF-8")
	data %>% glimpse()
	```

2.  Добавьте пропущенные данные о структуре данных (назначении столбцов)

	В файле header.csv не хватает некоторых столбцов и данных о них, добавим их вручную.

	```{r}
	header = read.csv("header.csv", encoding = "UTF-8", skip = 1, header = FALSE, sep = ',')$V1
	colnames(data) = header
	```

3.  Преобразуйте данные в столбцах в нужный формат
4.  Просмотрите общую структуру данных с помощью функции glimpse()

	```{r}
	data %>% glimpse()
	```

### Шаг 2. Анализ данных

##### Задание 1. Сколько участников информационного обмена в сети Доброй Организации?

```{r}
unique_ips <- union(unique(data$id.orig_h), unique(data$id.resp_h))
unique_ips %>% length()
```

##### Задание 2. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?

Диапазоны частных ip-адресов:

1.  10.0.0.0 - 10.255.255.255
2.  100.64.0.0 - 100.127.255.255
3.  172.16.0.0 - 172.31.255.255
4.  192.168.0.0 - 192.168.255.255

```{r}
internal_ip_pattern <- c("192.168.", "10.", "100.([6-9]|1[0-1][0-9]|12[0-7]).", "172.((1[6-9])|(2[0-9])|(3[0-1])).")
internal_ips <- unique_ips[grep(paste(internal_ip_pattern, collapse = "|"), unique_ips)]
count_internal <- sum(unique_ips %in% internal_ips)
count_external <- length(unique_ips) - count_internal

ratio <- count_internal / count_external
ratio
```

##### Задание 3. Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность

```{r}
top_10_activity <- data %>%
  group_by(ip = id.orig_h) %>%
  summarise(activity_count = n()) %>%
  arrange(desc(activity_count)) %>%
  head(10)

top_10_activity
```

##### Задание 4. Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений

```{r}
top_10_domains <- data %>%
  group_by(domain = tolower(query)) %>%
  summarise(request_count = n()) %>%
  arrange(desc(request_count)) %>%
  head(10)

top_10_domains
```

##### Задание 5. Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам.

```{r}
top_10_domains_filtered <- data %>% 
  filter(tolower(query) %in% top_10_domains$domain) %>%
  arrange(ts)
time_intervals <- diff(top_10_domains_filtered$ts)

summary(time_intervals)
```

##### Задание 6. Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{r}
ip_domain_counts <- data %>%
  group_by(ip = tolower(id.orig_h), domain = tolower(query)) %>%
  summarise(request_count = n()) %>%
  filter(request_count > 1)
unique_ips_with_periodic_requests <- unique(ip_domain_counts$ip)

unique_ips_with_periodic_requests %>% length()
unique_ips_with_periodic_requests %>% head()
```

## Шаг 3. Обогащение данных

##### Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co.

```{r}
top_10_domains
```

1.  teredo.ipv6.microsoft.com

	-   IP: 20.112.250.133
	-   Country: United States
	-   Timezone: America/Chicago
	-   Organization: Microsoft

2.  tools.google.com

	-   IP: 173.194.222.100
	-   Country: United States
	-   Timezone: America/Chicago
	-   Organization: Google

3.  www.apple.com

	-   IP: 17.253.144.10
	-   Country: United States
	-   Timezone: America/Chicago
	-   Organization: Apple-Engineering

4.  safebrowsing.clients.google.com

	-   IP: 64.233.164.100
	-   Country: United States
	-   Timezone: America/Chicago
	-   Organization: Google

5.  44.206.168.192.in-addr.arpa

	-   IP: 44.206.168.192
	-   Country: United States
	-   City: Ashburn
	-   Timezone: America/New_York
	-   Organization: Amazon

## Оценка результатов

В результате были получены ответы на все поставленные вопросы с помощью языка R и библиотеки `dplyr`

## Вывод

В ходе выполнения лабораторной работы были подготовлены, проанализированы и обогащены данные DNS трафика